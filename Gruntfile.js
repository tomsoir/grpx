// Generated by CoffeeScript 1.8.0
var mountFolder;

mountFolder = function(connect, dir) {
  return connect["static"](require('path').resolve(dir));
};

module.exports = function(grunt) {
  return grunt.initConfig({
    "package": {
      inPath: 'dev/grpx.js',
      outputPath: 'build/grpx.min.js',
      name: 'GRPX lib (https://github.com/tomsoir/grpx)',
      company: 'Correct Price (http://correctprice.ru/)',
      version: '0.1.1',
      date: '<%= grunt.template.today("yyyy-mm-dd") %>',
      page: 'http://tomsoir.github.io/grpx',
      wiki: 'https://github.com/tomsoir/grpx/wiki'
    },
    uglify: {
      options: {
        compress: {
          global_defs: {
            "DEBUG": false
          },
          dead_code: true
        },
        wrap: false,
        banner: '/*\n <%= package.name %>\n <%= package.company %>\n version <%= package.version %>\n date <%= package.date %>\n*/\n'
      },
      "public": {
        files: {
          '<%= package.outputPath %>': ['<%= package.inPath %>']
        }
      }
    }
  }, grunt.loadNpmTasks('grunt-contrib-uglify'), grunt.registerTask('build', ['uglify']), grunt.registerTask('copyToSite', 'Copy build js files to site', function() {
    var exec;
    grunt.option('force', true);
    exec = require("child_process").exec;
    exec('cp ' + buildPathFile + ' ' + publicPathFile, function(e) {
      if (e) {
        return grunt.log.error(e);
      }
    });
    return eachApp(function(appName, pathToProfile, config) {
      var buildPathFile, content, createDirBuildPathFile, createDirPublicPathFile, encodingPath, path, publicPathFile;
      encodingPath = getEncodingPath(appName);
      createDirBuildPathFile = __dirname + '/' + config.buildOutputPath + appName + '/' + config.app.out.outProfileAppFileProduction;
      createDirPublicPathFile = config.buildProductionPath + appName + '/' + encodingPath + '/' + config.app.out.outProfileAppFileProduction;
      content = grunt.file.read(createDirBuildPathFile);
      grunt.file.write(createDirPublicPathFile, content);
      path = require("path");
      buildPathFile = __dirname + '/' + config.buildOutputPath + appName + '/*';
      publicPathFile = config.buildProductionPath + appName + '/' + encodingPath + '/';
      return publicPathFile = path.join(__dirname, publicPathFile);
    });
  }));
};
